!function(){return function a(t,e,n){function r(s,o){if(!e[s]){if(!t[s]){var l="function"==typeof require&&require;if(!o&&l)return l(s,!0);if(i)return i(s,!0);var c=new Error("Cannot find module '"+s+"'");throw c.code="MODULE_NOT_FOUND",c}var m=e[s]={exports:{}};t[s][0].call(m.exports,function(a){return r(t[s][1][a]||a)},m,m.exports,a,t,e,n)}return e[s].exports}for(var i="function"==typeof require&&require,s=0;s<n.length;s++)r(n[s]);return r}}()({1:[function(a,t,e){const n=({scale:a,translateX:t,translateY:e})=>`matrix(${a}, 0, 0, ${a}, ${t}, ${e})`,r=({state:a,originX:t,originY:e})=>{a.transformation.translateX+=t,a.transformation.translateY+=e,a.element.style.transform=n({scale:a.transformation.scale,translateX:a.transformation.translateX,translateY:a.transformation.translateY})},i=a=>({zoom:({x:t,y:e,deltaScale:r})=>{const{left:i,top:s}=a.element.getBoundingClientRect(),{minScale:o,maxScale:l,scaleSensitivity:c}=a,[m,f]=(({scale:a,minScale:t,maxScale:e,scaleSensitivity:n,deltaScale:r})=>{let i=a+r/(n/a);return[a,i=Math.max(t,Math.min(i,e))]})({scale:a.transformation.scale,deltaScale:r,minScale:o,maxScale:l,scaleSensitivity:c}),S=t-i,p=e-s,g=S/m,u=p/m,x=(({minScale:a,maxScale:t,scale:e})=>({pos:n,prevPos:r,translate:i})=>(({minScale:a,maxScale:t,scale:e})=>e<=t&&e>=a)({minScale:a,maxScale:t,scale:e})&&(({pos:a,prevPos:t})=>a!==t)({pos:n,prevPos:r})?i+(n-r*e)*(1-1/e):i)({scale:m,minScale:o,maxScale:l}),X=x({pos:S,prevPos:a.transformation.originX,translate:a.transformation.translateX}),Y=x({pos:p,prevPos:a.transformation.originY,translate:a.transformation.translateY});a.element.style.transformOrigin=`${g}px ${u}px`,a.element.style.transform=n({scale:f,translateX:X,translateY:Y}),a.transformation={originX:g,originY:u,translateX:X,translateY:Y,scale:f}}});t.exports={renderer:({minScale:a,maxScale:t,element:e,scaleSensitivity:n=10})=>{const s={element:e,minScale:a,maxScale:t,scaleSensitivity:n,transformation:{originX:0,originY:0,translateX:0,translateY:0,scale:1}};return Object.assign({},i(s),(a=>({panBy:({originX:t,originY:e})=>r({state:a,originX:t,originY:e}),panTo:({originX:t,originY:e,scale:n})=>{a.transformation.scale=n,r({state:a,originX:t-a.transformation.translateX,originY:e-a.transformation.translateY})}}))(s))}}},{}]},{},[1]);